#for k,v used within for_each to iterate over a map (a colelction of key-value pairs)
#k represents the key of the current key-value pair in the map. The name or identifier for that specific entry in the map. 
#v represents the value associated with the current key. It can be any data type 
#allows you to dynamically create or configure resources based on the data within a map. 


output "network_id" {
    value = google_compute_network.default.id 
    }

#iterates overs all the subnets, creates a map where the subnet name is the key and its ID is the value, and assigns this map to the "subnets"ids" output.
#TF creates a map named google_compute_subnetworks.subnets where the K are the names assigned to the subnets ("subnet a", "subnet b", subnet "c"). The values are objects containing all the attributes defined fr each subnet resource. 
#for k,v in... is a for_each loop construct to iterate over a collection, the google_compute_subnetworks.subnets map

output "subnet_ids" {
    value = {for k,v in google_compute_subnetwork.subnets : k => v.id}
}

# module.vm refers to the output of a seperate module we called vm.
# in the for_each loop: for k, v in module.vm, module.vm provides a collection of data (a map) that represents the information about the VMs created by the "vm" module. the loop iterates over each entry in this collection. 
# k represents the key of the current vm in the module.vm output map. 
# key-value assignment operator => signifies that the value left of the key, will be used as the key for the subsequent block of data (which contains the name, id and private_ip) as part of a nested map. 
# k => {...} is the mechanism that constructs a new map within the output block. 1. Determines the key: the k before the => specifies that the key for the nested map will be the current VM's name (as defined in the module.vm output) 2. Creates a nested Map: the curly braces {} indiciate that a new map (and [] indicate a list) will be created for each VM. 3. Populate the nested map: within the curly braches, define the key-value pairs for the nested map. These key-value pairs represent specific attributes of the current vm. 
# module.vm acts as a bridge between the root module and the vm submodule. 
# allows us to access and use the information generated by the "vm" module within the root module's configuration

output "vms" {
  value = {for k,v in module.vm : k => {
    name = v.name
    id = v.id
    private_ip = v.private_ip
  }}
}

output "firewall_ids" {
  value = {for k,v in google_compute_firewall.firewall_rules : k => v.id}
}

output "storage_bucket_urls" {
  value = {for k,v in google_storage_bucket.buckets : k => v.url}
}

output "cloud_sql_instance_name" {
  value = module.cloud_sql.instance_name
   #value = google_sql_database_instance.mycloudsql_instance_name.name
}

output "cloud_sql_database_names" {  # Make the name plural
  value = module.cloud_sql.cloud_sql_database_names # map output
}

#output "cloud_sql_database_name" {
#  value = module.cloud_sql.cloud_sql_database_name  # Reference the output from the module
#}